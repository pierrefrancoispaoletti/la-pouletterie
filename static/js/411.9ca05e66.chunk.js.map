{"version":3,"file":"static/js/411.9ca05e66.chunk.js","mappings":"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","sources":["pages/Checkout/checkout.style.js","components/OrderItem/order-item.style.js","components/OrderItem/OrderItem.js","pages/UserOrders/UserOrders.js","CustomHooks/useFetchOrdersByUserId.js","pages/UserOrders/user-orders.style.js","redux/reducers/order/order.actions.js","querries/order.querries.js","redux/reducers/order/order.selectors.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const CheckoutContainer = styled.main`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const CheckoutTitle = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  h2 {\n    width: 50%;\n  }\n  span {\n    display: inline-block;\n    font-weight: bold;\n    font-size: 1.3em;\n  }\n`;\n\nexport const NoItemMessage = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 80vh;\n`;\n","import styled from \"styled-components\";\n\nexport const OrderItemContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\nexport const ItemOrderDate = styled.div`\n  align-self: flex-start;\n  width: 100%;\n  display: flex;\n  justify-content: space-around;\n  text-decoration: underline;\n`;\n\nexport const DetailsStyled = styled.details`\n  display: block;\n  align-self: flex-start;\n  margin-left: 1em;\n`;\n\nexport const ItemOrderUl = styled.ul`\n  list-style: none;\n`;\n","import React from \"react\";\nimport {\n  DetailsStyled,\n  ItemOrderDate,\n  ItemOrderUl,\n  OrderItemContainer,\n} from \"./order-item.style\";\n\nconst OrderItem = ({ ...order }) => {\n  const { date, products, status } = order;\n  return (\n    <OrderItemContainer>\n      <ItemOrderDate>\n        {date}\n        <div>\n          Total :\n          {products\n            .reduce((acc, amt) => acc + amt.price * amt.quantity, 0)\n            .toFixed(2)}\n          €\n        </div>\n      </ItemOrderDate>\n      <DetailsStyled>\n        <ItemOrderUl>\n          <summary>\n            <span>status de la commande: {status}</span>\n            {products.map(({ _id, name, price, quantity }) => (\n              <li>\n                <div>\n                  {`${name} ${\n                    _id === null ? \"(indisponible)\" : \"\"\n                  } x ${quantity} = ${price * quantity.toFixed(2)} €`}\n                </div>\n              </li>\n            ))}\n          </summary>\n        </ItemOrderUl>\n      </DetailsStyled>\n    </OrderItemContainer>\n  );\n};\n\nexport default OrderItem;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport CategoryTitle from \"../../components/CategoryTitle/CategoryTitle\";\nimport ItemOrder from \"../../components/OrderItem/OrderItem\";\nimport { useFetchUserOrdersByUserid } from \"../../CustomHooks/useFetchOrdersByUserId\";\nimport { selectOrdersByUserId } from \"../../redux/reducers/order/order.selectors\";\nimport { NoItemMessage } from \"../Checkout/checkout.style\";\nimport { UserOrderContainer } from \"./user-orders.style\";\n\nconst UserOrders = () => {\n  useFetchUserOrdersByUserid();\n  const orders = useSelector(selectOrdersByUserId);\n  return orders.length ? (\n    <UserOrderContainer>\n      <CategoryTitle>Mes Commandes</CategoryTitle>\n      {orders.map(({ user, ...op }) => (\n        <ItemOrder key={op._id} {...op} />\n      ))}\n    </UserOrderContainer>\n  ) : (\n    <UserOrderContainer>\n      <NoItemMessage>\n        Vous n'avez pas de commandes pour le moment\n        <Link to=\"/\">Retour à la boutique</Link>\n      </NoItemMessage>\n    </UserOrderContainer>\n  );\n};\n\nexport default UserOrders;\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchOrdersByUserId } from \"../querries/order.querries\";\nimport {\n  selectUserToken,\n  selectUserTokenDecoded,\n} from \"../redux/reducers/user/user.selectors\";\n\nexport const useFetchUserOrdersByUserid = () => {\n  const dispatch = useDispatch();\n  const user = useSelector(selectUserTokenDecoded);\n  const token = useSelector(selectUserToken);\n  useEffect(() => {\n    fetchOrdersByUserId(user.user._id, token, dispatch);\n  }, [dispatch, token, user.user._id]);\n};\n","import styled from \"styled-components\";\n\nexport const UserOrderContainer = styled.main`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n","import { orderActionTypes } from \"./order.types\";\n\nexport const getOrdersByUserId = (orders) => ({\n  type: orderActionTypes.GET_ORDERS_BY_USER_ID,\n  payload: orders,\n});\n\nexport const getAllOrders = (orders) => ({\n  type: orderActionTypes.GET_ALL_ORDERS,\n  payload: orders,\n});\n\nexport const getAllRawOrders = (orders) => ({\n  type: orderActionTypes.GET_ALL_RAW_ORDERS,\n  payload: orders,\n});\n","import axios from \"axios\";\nimport { setMessage, toggleLoading } from \"../redux/reducers/app/app.actions\";\nimport { emptyCart } from \"../redux/reducers/cart/cart.actions\";\nimport {\n  getAllOrders,\n  getAllRawOrders,\n  getOrdersByUserId,\n} from \"../redux/reducers/order/order.actions\";\nimport { localServerURI } from \"../_consts/server/server\";\n\nexport const fetchOrdersByUserId = async (userId, token, dispatch) => {\n  dispatch(toggleLoading());\n  try {\n    const response = await axios({\n      method: \"GET\",\n      url: `${localServerURI}/api/orders/${userId}`,\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    const {\n      data: { orders, message },\n    } = response;\n    dispatch(toggleLoading());\n    dispatch(getOrdersByUserId(orders));\n    dispatch(setMessage({ status: \"success\", message: message }));\n  } catch (error) {\n    dispatch(toggleLoading());\n    dispatch(\n      setMessage({ status: \"error\", message: error.response.data.message })\n    );\n  }\n};\n\nexport const fetchAllOrders = async (token, dispatch) => {\n  try {\n    const response = await axios({\n      method: \"GET\",\n      url: `${localServerURI}/api/orders/all`,\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n\n    const {\n      data: { orders },\n    } = response;\n\n    dispatch(getAllOrders(orders));\n  } catch (error) {\n    dispatch(\n      setMessage({ status: \"error\", message: error.response.data.message })\n    );\n  }\n};\n\nexport const fetchAllRawOrders = async (token, dispatch) => {\n  dispatch(toggleLoading());\n  try {\n    const response = await axios({\n      method: \"GET\",\n      url: `${localServerURI}/api/orders/all-raw`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    const {\n      data: { orders },\n    } = response;\n\n    dispatch(getAllRawOrders(orders));\n    dispatch(toggleLoading());\n  } catch (error) {\n    dispatch(toggleLoading());\n    dispatch(\n      setMessage({ status: \"error\", message: error.response.data.message })\n    );\n  }\n};\n\nexport const createOrder = async (token, order, dispatch, navigate) => {\n  dispatch(toggleLoading());\n  const { products, ...others } = order;\n  let newOrder = {\n    ...others,\n    products: products.map(({ _id, quantity, name, price }) => ({\n      _id,\n      quantity,\n      name,\n      price,\n    })),\n  };\n  try {\n    const response = await axios({\n      method: \"POST\",\n      url: `${localServerURI}/api/orders/add`,\n      data: { order: newOrder },\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    const {\n      data: { message },\n    } = response;\n    dispatch(toggleLoading());\n    dispatch(setMessage({ status: \"success\", message: message }));\n    dispatch(emptyCart());\n    navigate(\"/vos-commandes\");\n  } catch (error) {\n    dispatch(toggleLoading());\n    dispatch(\n      setMessage({ status: \"error\", message: error.response.data.message })\n    );\n  }\n};\n\nexport const updateOrder = async (token, update, dispatch) => {\n  dispatch(toggleLoading());\n  try {\n    const response = await axios({\n      method: \"POST\",\n      url: `${localServerURI}/api/orders/update`,\n      data: { update },\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    const {\n      data: { message },\n    } = response;\n    dispatch(toggleLoading());\n    dispatch(setMessage({ status: \"success\", message: message }));\n  } catch (error) {\n    dispatch(toggleLoading());\n    dispatch(\n      setMessage({ status: \"error\", message: error.response.data.message })\n    );\n  }\n};\n","import { createSelector } from \"reselect\";\n\nconst selectOrder = (state) => state.order;\n\nexport const selectOrdersByUserId = createSelector(\n  [selectOrder],\n  (order) => order.userOrders\n);\n\nexport const selectAllOrders = createSelector(\n  [selectOrder],\n  (order) => order.allOrders\n);\n\nexport const selectAllRawOrders = createSelector(\n  [selectOrder],\n  (order) => order.rawOrders\n);\n"],"names":["CheckoutContainer","styled","CheckoutTitle","NoItemMessage","OrderItemContainer","ItemOrderDate","DetailsStyled","ItemOrderUl","order","date","products","status","reduce","acc","amt","price","quantity","toFixed","map","_id","name","dispatch","useDispatch","user","useSelector","selectUserTokenDecoded","token","selectUserToken","useEffect","fetchOrdersByUserId","useFetchUserOrdersByUserid","orders","selectOrdersByUserId","length","CategoryTitle","op","to","UserOrderContainer","getOrdersByUserId","type","orderActionTypes","payload","getAllOrders","getAllRawOrders","userId","toggleLoading","axios","method","url","localServerURI","headers","Authorization","response","data","message","setMessage","fetchAllOrders","fetchAllRawOrders","createOrder","navigate","others","newOrder","emptyCart","updateOrder","update","selectOrder","state","createSelector","userOrders","selectAllOrders","allOrders","selectAllRawOrders","rawOrders"],"sourceRoot":""}