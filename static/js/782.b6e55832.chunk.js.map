{"version":3,"file":"static/js/782.b6e55832.chunk.js","mappings":"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","sources":["components/ProductItem/product-item.style.js","components/ProductItem/ProductItem.js","CustomHooks/useCreatePaymentIntent.js","components/InformativeElement/informative-element.style.js","components/InformativeElement/InformativeElement.js","_consts/config.js","components/OrderAndPaymentButton/OrderAndPaymentButton.js","components/AddressElement /AddressElement.js","querries/google.querries.js","pages/Checkout/Checkout.js","CustomHooks/useCheckDistanceFromOrigin.js","pages/Checkout/checkout.style.js","redux/reducers/order/order.actions.js","querries/order.querries.js","querries/payment.querries.js"],"sourcesContent":["import styled, { css } from \"styled-components\";\nimport { colors } from \"../../_consts/colors/colors\";\n\nconst isCart = (props) => {\n  if (props.isCart) {\n    return css`\n      flex-direction: row;\n      div > img {\n        width: 80px;\n        height: 80px;\n        margin-right: 8px;\n      }\n    `;\n  }\n};\nexport const ProductItemContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: ${(props) =>\n    props.isCart ? \"flex-start\" : \"space-between\"};\n  align-items: center;\n  width: 100%;\n  padding: 12px;\n`;\n\nexport const ProductItemTop = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  min-height: 100%;\n  div > img {\n    width: 300px;\n    height: 300px;\n  }\n  ${isCart}\n`;\n\nexport const ProductItemTitleAndPrice = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: ${(props) =>\n    props.isCart ? \"space-between\" : \"flex-start\"};\n  flex-grow: 1;\n  h3 {\n    margin: 0;\n    margin-bottom: 22px;\n    font-size: 1em;\n    text-transform: uppercase;\n    text-align: left;\n    align-self: flex-start;\n  }\n  span {\n    font-size: 1em;\n    font-weight: bold;\n    display: inline-block;\n    margin-left: 12px;\n    align-self: flex-start;\n  }\n`;\n\nexport const ProductItemDescription = styled.div`\n  width: fit-content;\n  margin-left: auto;\n  font-size: 1.3em;\n  margin: 12px 0;\n  height: auto;\n  border: 3px solid ${colors.gold};\n  background: ${colors.green};\n  color: white;\n  font-weight: 700;\n  line-height: 1.5;\n  padding: 0.5em;\n  border-radius: 12px;\n`;\n\nexport const ProductItemButtonContainer = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: space-around;\n`;\n\nexport const ProductImageContainer = styled.div`\n  width: fit-content;\n  height: fit-content;\n  img {\n    border-radius: 30px 30px 30px 30px;\n  }\n`;\n","import { faEye } from \"@fortawesome/pro-duotone-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { memo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addToCart } from \"../../redux/reducers/cart/cart.actions\";\nimport { selectCartItems } from \"../../redux/reducers/cart/cart.selectors\";\nimport { getSpecificItemCount } from \"../../redux/reducers/cart/cart.utils\";\nimport { selectProduct } from \"../../redux/reducers/product/product.actions\";\nimport { localServerURI } from \"../../_consts/server/server\";\nimport Badge from \"../Badge/Badge\";\nimport CustomButton from \"../CustoButton/CustomButton\";\nimport {\n  ProductImageContainer,\n  ProductItemButtonContainer,\n  ProductItemContainer,\n  ProductItemTitleAndPrice,\n  ProductItemTop,\n} from \"./product-item.style\";\n\nconst ProductItem = ({ children, isCart, ...product }) => {\n  console.log(\"mounted\");\n  const dispatch = useDispatch();\n  const cart = useSelector(selectCartItems);\n  return (\n    <ProductItemContainer isCart={isCart}>\n      <ProductItemTop isCart={isCart}>\n        <ProductImageContainer style={{ position: \"relative\" }}>\n          {!isCart && (\n            <>\n              <Badge right>{getSpecificItemCount(product._id, cart)}</Badge>\n              <Badge\n                left\n                style={{ background: \"rgba(255,255,255, 0.2)\" }}\n                onClick={() => dispatch(selectProduct(product))}\n              >\n                <FontAwesomeIcon icon={faEye} color=\"white\" size=\"2x\" />\n              </Badge>\n            </>\n          )}\n          <img\n            src={`${localServerURI}/uploads/${product.imgURI}`}\n            alt={product?.name}\n            loading=\"lazy\"\n          />\n          {!isCart && (\n            <CustomButton\n              style={{\n                position: \"absolute\",\n                bottom: \"8px\",\n                right: \"0\",\n                width: \"100%\",\n              }}\n              positive\n              type=\"button\"\n              onClick={() => dispatch(addToCart(product))}\n            >\n              Ajouter au Panier\n            </CustomButton>\n          )}\n        </ProductImageContainer>\n        <ProductItemTitleAndPrice isCart={isCart}>\n          <h3>\n            {product.hidden ? `CACHE : ${product?.name}` : `${product.name}`}\n          </h3>\n          <span>\n            {product?.price?.toFixed(2)}\n            <small>€</small>\n          </span>\n        </ProductItemTitleAndPrice>\n      </ProductItemTop>\n      <ProductItemButtonContainer>{children}</ProductItemButtonContainer>\n    </ProductItemContainer>\n  );\n};\n\nexport default memo(ProductItem);\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { createPaymentIntent } from \"../querries/payment.querries\";\nimport { selectCartItems } from \"../redux/reducers/cart/cart.selectors\";\nimport { selectUserToken } from \"../redux/reducers/user/user.selectors\";\n\nconst useCreatePaymentIntent = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const token = useSelector(selectUserToken);\n  const cart = useSelector(selectCartItems);\n  useEffect(() => {\n    createPaymentIntent(token, cart, dispatch, navigate);\n  }, [cart, dispatch, navigate, token]);\n};\n\nexport default useCreatePaymentIntent;\n","import styled from \"styled-components\";\nimport { colors } from \"../../_consts/colors/colors\";\n\nexport const InformativeElementContainer = styled.div`\n  display: flex;\n  text-align: center;\n  justify-content: center;\n  padding: 18px;\n  width: 100%;\n  border: 3px solid ${colors.red};\n`;\n","import React from \"react\";\nimport { InformativeElementContainer } from \"./informative-element.style\";\n\nconst InformativElement = ({ children }) => {\n  return <InformativeElementContainer>{children}</InformativeElementContainer>;\n};\n\nexport default InformativElement;\n","export const config = {\n  minimumOrderAmount: 10,\n  minimumOrderHour: \"09:30\",\n  maximumOrderHour: \"19:00\",\n  deliveryStartTime: \"11:00\",\n  deliveryPostalCodes: [\"20090\", \"20167\"],\n  closingDays: [\"dimanche\"],\n  maximumDistanceInMeters: 8500,\n  maximumTimeInSeconds: 900,\n  additionalMinutesBeforeDelivery: 10,\n};\n","import React, { useState } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setMessage } from \"../../redux/reducers/app/app.actions\";\n\nimport {\n  selectCartItems,\n  selectCartItemTotal,\n} from \"../../redux/reducers/cart/cart.selectors\";\nimport {\n  selectUserToken,\n  selectUserTokenDecoded,\n} from \"../../redux/reducers/user/user.selectors\";\nimport {\n  selectCanDeliver,\n  selectCurrentDay,\n} from \"../../redux/reducers/app/app.selectors\";\n\nimport { useNavigate } from \"react-router-dom\";\nimport { createOrder } from \"../../querries/order.querries\";\n\nimport CategoryTitle from \"../CategoryTitle/CategoryTitle\";\nimport CustomButton from \"../CustoButton/CustomButton\";\nimport InformativElement from \"../InformativeElement/InformativeElement\";\n\nimport { config } from \"../../_consts/config\";\nimport { currentHour } from \"../../utils/utils\";\n\nconst OrderAndPaymentButtons = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [selectTakeAway, setSelectTakeAway] = useState(\"\");\n  const [selectPaymentMethod, setSelectPaymentMethod] = useState(\"\");\n\n  const cart = useSelector(selectCartItems);\n  const user = useSelector(selectUserTokenDecoded);\n  const token = useSelector(selectUserToken);\n  const total = useSelector(selectCartItemTotal);\n  const currentDay = useSelector(selectCurrentDay);\n  const canDeliver = useSelector(selectCanDeliver);\n\n  const {\n    closingDays,\n    minimumOrderAmount,\n    maximumOrderHour,\n    minimumOrderHour,\n  } = config;\n\n  const handleTakeAwayMethod = (method) => {\n    setSelectTakeAway(method);\n    setSelectPaymentMethod(\"\");\n    if (method === \"delivery\" && total < minimumOrderAmount) {\n      dispatch(\n        setMessage({\n          status: \"error\",\n          message: `Un montant de commande de ${minimumOrderAmount}€ est necessaire pour etre livré`,\n        })\n      );\n      return;\n    }\n  };\n  const handlePaymentMethod = (method) => {\n    setSelectPaymentMethod(method);\n  };\n  const handleCreateOrderForTakeAwayOrPaymentOnDelivery = () => {\n    // si l'utilisateur choisit d'utiliser\n    //le payment à la livraison ou la vente\n    //a emporter on appelle la queerie\n    //create order\n    const order = {\n      user: user?.user?._id,\n      products: cart,\n      deliveryAddress:\n        selectTakeAway === \"take-away\"\n          ? \"\"\n          : `${user?.user?.address?.addressFirstLine} ${user?.user?.address?.addressComplement}`,\n      deliveryMode: selectTakeAway === \"take-away\" ? \"EMPORTER\" : \"LIVRAISON\",\n      status: \"ATTENTE_PAIEMENT\",\n      date: new Date().toLocaleDateString(\"fr-FR\", {\n        weekday: \"long\",\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n        hour: \"numeric\",\n        minute: \"numeric\",\n      }),\n    };\n    createOrder(token, order, dispatch, navigate);\n  };\n  const checkOrdersOpen = () => {\n    if (closingDays.includes(currentDay)) {\n      return {\n        canOrder: false,\n        reason: `La boutique est fermée : ${closingDays.join(\", \")}`,\n      };\n    } else if (currentHour < minimumOrderHour) {\n      return {\n        canOrder: false,\n        reason: `Vous pourrez commander à partir de ${minimumOrderHour.replace(\n          \":\",\n          \" H \"\n        )}`,\n      };\n    } else if (currentHour > maximumOrderHour) {\n      return {\n        canOrder: false,\n        reason:\n          \"Les commandes sont terminées pour aujourd'hui, revenez demain !\",\n      };\n    } else {\n      return { canOrder: true };\n    }\n  };\n  return checkOrdersOpen().canOrder ? (\n    <div>\n      <CategoryTitle>Je Choisis mon mode de livraison</CategoryTitle>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }}\n      >\n        <CustomButton\n          paymentSelection\n          positive\n          selected={selectTakeAway === \"take-away\"}\n          type=\"button\"\n          onClick={() => handleTakeAwayMethod(\"take-away\")}\n        >\n          A emporter\n        </CustomButton>\n        <CustomButton\n          disabled={total < minimumOrderAmount || !canDeliver}\n          paymentSelection\n          positive\n          selected={selectTakeAway === \"delivery\"}\n          type=\"button\"\n          onClick={() => handleTakeAwayMethod(\"delivery\")}\n        >\n          {`Livraison (minimum ${minimumOrderAmount}€)`}\n        </CustomButton>\n      </div>\n      {selectTakeAway &&\n        selectTakeAway === \"delivery\" &&\n        total > minimumOrderAmount && (\n          <>\n            <CategoryTitle>Je Choisis mon mode de Paiement</CategoryTitle>\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n              }}\n            >\n              <CustomButton\n                paymentSelection\n                positive\n                selected={selectPaymentMethod === \"payment-on-delivery\"}\n                type=\"button\"\n                onClick={() => handlePaymentMethod(\"payment-on-delivery\")}\n              >\n                Paiement Espéces ou Tickets restaurant à la livraison\n              </CustomButton>\n              <CustomButton\n                paymentSelection\n                positive\n                selected={selectPaymentMethod === \"CB\"}\n                type=\"button\"\n                onClick={() => handlePaymentMethod(\"CB\")}\n              >\n                Paiment CB en ligne\n              </CustomButton>\n            </div>\n          </>\n        )}\n      <div style={{ height: \"76px\" }} />\n      {selectPaymentMethod === \"CB\" && (\n        <CustomButton\n          type=\"button\"\n          payment\n          onClick={() => navigate(\"/paiement\")}\n        >\n          Payer {total} €\n        </CustomButton>\n      )}\n      {(selectPaymentMethod === \"payment-on-delivery\" ||\n        selectTakeAway === \"take-away\") && (\n        <CustomButton\n          type=\"button\"\n          payment\n          onClick={() => handleCreateOrderForTakeAwayOrPaymentOnDelivery()}\n        >\n          Commander {total} €\n        </CustomButton>\n      )}\n    </div>\n  ) : (\n    <InformativElement>{checkOrdersOpen().reason}</InformativElement>\n  );\n};\n\nexport default OrderAndPaymentButtons;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { selectUserFullAddress } from \"../../redux/reducers/user/user.selectors\";\nimport CustomButton from \"../CustoButton/CustomButton\";\n\nconst AddressElement = () => {\n  const navigate = useNavigate();\n  const userAddress = useSelector(selectUserFullAddress);\n  return (\n    <div\n      style={{\n        textAlign: \"center\",\n        border: \"6px solid black\",\n        padding: \"0 8px 8px 8px\",\n        width: \"100%\",\n      }}\n    >\n      <p>Votre adresse : {userAddress}</p>\n      <CustomButton\n        type=\"button\"\n        positive\n        onClick={() => navigate(\"/vos-infos\")}\n      >\n        Modifier mon adresse de livraison\n      </CustomButton>\n    </div>\n  );\n};\n\nexport default AddressElement;\n","import axios from \"axios\";\nimport {\n  changeCanDeliver,\n  setAverageTimeBeforeDelivery,\n  setMessage,\n} from \"../redux/reducers/app/app.actions\";\nimport { config } from \"../_consts/config\";\nimport { localServerURI } from \"../_consts/server/server\";\n\nexport const getDistanceMatrix = async (origin, dest, postalCode, dispatch) => {\n  const now = Date.now() + 1000 * 60 * 10; //  on rajoute 10minutes au pour le temps de preparation de la commande\n  const { maximumTimeInSeconds, maximumDistanceInMeters, deliveryPostalCodes } =\n    config;\n  try {\n    const response = await axios({\n      method: \"post\",\n      url: `${localServerURI}/api/google-api/get-matrix`,\n      headers: { \"Accept-Language\": \"fr\" },\n      data: {\n        origin: origin.sansAccent(),\n        dest: `${dest.sansAccent()}, ${postalCode}`,\n        now,\n      },\n    });\n    const {\n      data: { rows },\n    } = response;\n\n    const { distance, duration, duration_in_traffic } = rows[0].elements[0];\n\n    const medianDurationValueInSeconds =\n      Math.round(duration.value + duration_in_traffic.value) / 2;\n\n    // si une des conditions ci dessous est true l'app renvois false\n    if (\n      distance.value > maximumDistanceInMeters ||\n      !deliveryPostalCodes.includes(postalCode) ||\n      medianDurationValueInSeconds > maximumTimeInSeconds\n    ) {\n      console.log(false);\n      dispatch(changeCanDeliver(false));\n    } else {\n      console.log(true);\n      dispatch(changeCanDeliver(true));\n      dispatch(\n        setAverageTimeBeforeDelivery(\n          Math.round(medianDurationValueInSeconds / 60)\n        )\n      );\n    }\n  } catch (error) {\n    dispatch(changeCanDeliver(false));\n    console.log(error);\n    dispatch(\n      setMessage({\n        status: \"error\",\n        message: \"Il y à eu un probléme\",\n      })\n    );\n  }\n};\n","import React from \"react\";\n\nimport { useSelector } from \"react-redux\";\n\nimport {\n  selectCartItems,\n  selectCartItemTotal,\n} from \"../../redux/reducers/cart/cart.selectors\";\n\nimport ProductItem from \"../../components/ProductItem/ProductItem\";\nimport CartControlButtons from \"../../components/CartControlButtons/CartControlButtons\";\n\nimport useCreatePaymentIntent from \"../../CustomHooks/useCreatePaymentIntent\";\n\nimport OrderAndPaymentButtons from \"../../components/OrderAndPaymentButton/OrderAndPaymentButton\";\n\nimport {\n  CheckoutContainer,\n  CheckoutTitle,\n  NoItemMessage,\n} from \"./checkout.style\";\nimport { Link } from \"react-router-dom\";\nimport InformativElement from \"../../components/InformativeElement/InformativeElement\";\nimport {\n  selectAverageTimeBeforeDeliveryInMinutes,\n  selectCanDeliver,\n} from \"../../redux/reducers/app/app.selectors\";\nimport AddressElement from \"../../components/AddressElement /AddressElement\";\nimport { useCheckDistanceFromOrigin } from \"../../CustomHooks/useCheckDistanceFromOrigin\";\nimport { config } from \"../../_consts/config\";\nimport { currentHour } from \"../../utils/utils\";\n\nconst Checkout = () => {\n  const cart = useSelector(selectCartItems);\n  const total = useSelector(selectCartItemTotal);\n  const canDeliver = useSelector(selectCanDeliver);\n  const averageTimeBeforeDeliveryInMinutes = useSelector(\n    selectAverageTimeBeforeDeliveryInMinutes\n  );\n\n  const {\n    minimumOrderAmount,\n    additionalMinutesBeforeDelivery,\n    deliveryStartTime,\n  } = config;\n  useCheckDistanceFromOrigin();\n  useCreatePaymentIntent();\n  return cart.length ? (\n    <CheckoutContainer>\n      {!canDeliver ||\n      total < minimumOrderAmount ||\n      currentHour < deliveryStartTime ? (\n        <InformativElement>\n          {!canDeliver\n            ? \"Votre Addresse actuelle ne permet pas la livraison\"\n            : total < minimumOrderAmount\n            ? \"Le montant de votre commande actuel ne permet pas a livraison\"\n            : currentHour < deliveryStartTime\n            ? `Les livraisons commencent à partir de ${deliveryStartTime}h , mais vous pouvez commander dés maintenant afin d'être livré le plus tôt possible`\n            : \"\"}\n        </InformativElement>\n      ) : (\n        <InformativElement>\n          {`Si vous commandez maintenant, votre commande sera chez vous dans ${\n            averageTimeBeforeDeliveryInMinutes + additionalMinutesBeforeDelivery\n          } minutes`}\n        </InformativElement>\n      )}\n      <AddressElement />\n      <CheckoutTitle>\n        <h2>Votre Panier</h2>\n        <span>\n          Total : {total} <small>€</small>\n        </span>\n      </CheckoutTitle>\n      {cart.map(\n        (item) =>\n          item && (\n            <ProductItem key={item._id} {...item} isCart>\n              <CartControlButtons _id={item._id} product={item} />\n            </ProductItem>\n          )\n      )}\n      <OrderAndPaymentButtons />\n    </CheckoutContainer>\n  ) : (\n    <CheckoutContainer>\n      <NoItemMessage>\n        Votre Panier est vide actuellement\n        <Link to=\"/\">Retour à la boutique</Link>\n      </NoItemMessage>\n    </CheckoutContainer>\n  );\n};\n\nexport default Checkout;\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getDistanceMatrix } from \"../querries/google.querries\";\nimport { selectOriginAddress } from \"../redux/reducers/app/app.selectors\";\nimport {\n  selectUserFullAddress,\n  selectUserPostalCode,\n} from \"../redux/reducers/user/user.selectors\";\n\nexport const useCheckDistanceFromOrigin = () => {\n  const origin = useSelector(selectOriginAddress);\n  const dest = useSelector(selectUserFullAddress);\n  const postalCode = useSelector(selectUserPostalCode);\n  const dispatch = useDispatch();\n\n  // test datas\n  // const dest = \"Rte du Vazzio, 20090 Ajaccio\";\n  // const postalCode = \"20090\";\n  useEffect(() => {\n    getDistanceMatrix(origin, dest, postalCode, dispatch);\n  }, [dest, dispatch, origin, postalCode]);\n};\n","import styled from \"styled-components\";\n\nexport const CheckoutContainer = styled.main`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const CheckoutTitle = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  h2 {\n    width: 50%;\n  }\n  span {\n    display: inline-block;\n    font-weight: bold;\n    font-size: 1.3em;\n  }\n`;\n\nexport const NoItemMessage = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 80vh;\n`;\n","import { orderActionTypes } from \"./order.types\";\n\nexport const getOrdersByUserId = (orders) => ({\n  type: orderActionTypes.GET_ORDERS_BY_USER_ID,\n  payload: orders,\n});\n\nexport const getAllOrders = (orders) => ({\n  type: orderActionTypes.GET_ALL_ORDERS,\n  payload: orders,\n});\n\nexport const getAllRawOrders = (orders) => ({\n  type: orderActionTypes.GET_ALL_RAW_ORDERS,\n  payload: orders,\n});\n","import axios from \"axios\";\nimport { setMessage, toggleLoading } from \"../redux/reducers/app/app.actions\";\nimport { emptyCart } from \"../redux/reducers/cart/cart.actions\";\nimport {\n  getAllOrders,\n  getAllRawOrders,\n  getOrdersByUserId,\n} from \"../redux/reducers/order/order.actions\";\nimport { localServerURI } from \"../_consts/server/server\";\n\nexport const fetchOrdersByUserId = async (userId, token, dispatch) => {\n  dispatch(toggleLoading());\n  try {\n    const response = await axios({\n      method: \"GET\",\n      url: `${localServerURI}/api/orders/${userId}`,\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    const {\n      data: { orders, message },\n    } = response;\n    dispatch(toggleLoading());\n    dispatch(getOrdersByUserId(orders));\n    dispatch(setMessage({ status: \"success\", message: message }));\n  } catch (error) {\n    dispatch(toggleLoading());\n    dispatch(\n      setMessage({ status: \"error\", message: error.response.data.message })\n    );\n  }\n};\n\nexport const fetchAllOrders = async (token, dispatch) => {\n  try {\n    const response = await axios({\n      method: \"GET\",\n      url: `${localServerURI}/api/orders/all`,\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n\n    const {\n      data: { orders },\n    } = response;\n\n    dispatch(getAllOrders(orders));\n  } catch (error) {\n    dispatch(\n      setMessage({ status: \"error\", message: error.response.data.message })\n    );\n  }\n};\n\nexport const fetchAllRawOrders = async (token, dispatch) => {\n  try {\n    const response = await axios({\n      method: \"GET\",\n      url: `${localServerURI}/api/orders/all-raw`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    const {\n      data: { orders },\n    } = response;\n\n    dispatch(getAllRawOrders(orders));\n  } catch (error) {\n    dispatch(toggleLoading());\n    dispatch(\n      setMessage({ status: \"error\", message: error.response.data.message })\n    );\n  }\n};\n\nexport const createOrder = async (token, order, dispatch, navigate) => {\n  dispatch(toggleLoading());\n  const { products, ...others } = order;\n  let newOrder = {\n    ...others,\n    products: products.map(({ _id, quantity }) => ({ _id, quantity })),\n  };\n  try {\n    const response = await axios({\n      method: \"POST\",\n      url: `${localServerURI}/api/orders/add`,\n      data: { order: newOrder },\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    const {\n      data: { message },\n    } = response;\n    dispatch(toggleLoading());\n    dispatch(setMessage({ status: \"success\", message: message }));\n    dispatch(emptyCart());\n    navigate(\"/vos-commandes\");\n  } catch (error) {\n    dispatch(toggleLoading());\n    dispatch(\n      setMessage({ status: \"error\", message: error.response.data.message })\n    );\n  }\n};\n\nexport const updateOrder = async (token, update, dispatch) => {\n  dispatch(toggleLoading());\n  try {\n    const response = await axios({\n      method: \"POST\",\n      url: `${localServerURI}/api/orders/update`,\n      data: { update },\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    const {\n      data: { message },\n    } = response;\n    dispatch(toggleLoading());\n    dispatch(setMessage({ status: \"success\", message: message }));\n  } catch (error) {\n    dispatch(toggleLoading());\n    dispatch(\n      setMessage({ status: \"error\", message: error.response.data.message })\n    );\n  }\n};\n","import axios from \"axios\";\nimport { setMessage, toggleLoading } from \"../redux/reducers/app/app.actions\";\nimport { setClientSecret } from \"../redux/reducers/payment/payment.actions\";\nimport { localServerURI } from \"../_consts/server/server\";\n\nexport const createPaymentIntent = async (\n  userToken,\n  cart,\n  dispatch,\n  navigate\n) => {\n  dispatch(toggleLoading());\n  try {\n    const response = await axios({\n      method: \"POST\",\n      url: `${localServerURI}/api/payment/create-payment-intent`,\n      headers: { Authorization: `Bearer ${userToken}` },\n      data: { items: cart },\n    });\n\n    dispatch(toggleLoading());\n    const {\n      data: { clientSecret },\n    } = response;\n    dispatch(setClientSecret(clientSecret));\n  } catch (error) {\n    dispatch(toggleLoading());\n    if (error.response.data === \"Unauthorized\") {\n      dispatch(\n        setMessage({\n          status: \"error\",\n          message: \"Vous devez être connécté pour passer une commande\",\n        })\n      );\n      navigate(\"/connexion\");\n    } else {\n      dispatch(\n        setMessage({\n          status: \"error\",\n          message: error.response.data.message,\n        })\n      );\n    }\n  }\n};\n\nexport const refundPayment = async (\n  token,\n  orderId,\n  paymentIntent,\n  dispatch\n) => {\n  dispatch(toggleLoading());\n  try {\n    const response = await axios({\n      method: \"POST\",\n      url: `${localServerURI}/api/payment/refund-payment`,\n      headers: { Authorization: `Bearer ${token}` },\n      data: { orderId, paymentIntent },\n    });\n    const {\n      data: { message },\n    } = response;\n    dispatch(toggleLoading());\n    dispatch(setMessage({ status: \"success\", message }));\n  } catch (error) {\n    dispatch(toggleLoading());\n    dispatch(\n      setMessage({\n        status: \"error\",\n        message: error.response.data.message,\n      })\n    );\n  }\n};\n"],"names":["ProductItemContainer","styled","props","isCart","ProductItemTop","css","ProductItemTitleAndPrice","ProductItemButtonContainer","colors","ProductImageContainer","ProductItem","children","product","console","log","dispatch","useDispatch","cart","useSelector","selectCartItems","style","position","Badge","right","getSpecificItemCount","_id","left","background","onClick","selectProduct","icon","faEye","color","size","src","localServerURI","imgURI","alt","name","loading","CustomButton","bottom","width","positive","type","addToCart","hidden","price","toFixed","memo","navigate","useNavigate","token","selectUserToken","useEffect","createPaymentIntent","InformativeElementContainer","config","useState","selectTakeAway","setSelectTakeAway","selectPaymentMethod","setSelectPaymentMethod","user","selectUserTokenDecoded","total","selectCartItemTotal","currentDay","selectCurrentDay","canDeliver","selectCanDeliver","closingDays","minimumOrderAmount","maximumOrderHour","minimumOrderHour","handleTakeAwayMethod","method","setMessage","status","message","handlePaymentMethod","checkOrdersOpen","includes","canOrder","reason","join","currentHour","replace","CategoryTitle","display","flexDirection","alignItems","paymentSelection","selected","disabled","height","payment","order","products","deliveryAddress","address","addressFirstLine","addressComplement","deliveryMode","date","Date","toLocaleDateString","weekday","year","month","day","hour","minute","createOrder","handleCreateOrderForTakeAwayOrPaymentOnDelivery","userAddress","selectUserFullAddress","textAlign","border","padding","getDistanceMatrix","origin","dest","postalCode","now","maximumTimeInSeconds","maximumDistanceInMeters","deliveryPostalCodes","axios","url","headers","data","sansAccent","response","rows","elements","distance","duration","duration_in_traffic","medianDurationValueInSeconds","Math","round","value","changeCanDeliver","setAverageTimeBeforeDelivery","averageTimeBeforeDeliveryInMinutes","selectAverageTimeBeforeDeliveryInMinutes","additionalMinutesBeforeDelivery","deliveryStartTime","selectOriginAddress","selectUserPostalCode","useCheckDistanceFromOrigin","useCreatePaymentIntent","length","map","item","CartControlButtons","OrderAndPaymentButton","to","CheckoutContainer","CheckoutTitle","NoItemMessage","getOrdersByUserId","orders","orderActionTypes","payload","getAllOrders","getAllRawOrders","fetchOrdersByUserId","userId","toggleLoading","Authorization","fetchAllOrders","fetchAllRawOrders","others","newOrder","quantity","emptyCart","updateOrder","update","userToken","items","clientSecret","setClientSecret","refundPayment","orderId","paymentIntent"],"sourceRoot":""}