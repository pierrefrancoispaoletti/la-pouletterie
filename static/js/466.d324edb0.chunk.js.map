{"version":3,"file":"static/js/466.d324edb0.chunk.js","mappings":"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","sources":["components/AdminBar/admin-bar.style.js","components/AdminBar/AdminBar.js","components/ProductItem/product-item.style.js","components/ProductItem/ProductItem.js","pages/Home/Home.Page.js","pages/Home/home.style.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const AdminBarContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n`;\n","import {\n  faEdit,\n  faEye,\n  faEyeSlash,\n  faTrash,\n} from \"@fortawesome/pro-duotone-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { verifyToken } from \"../../querries/auth.querries\";\nimport { deleteProduct, hideProduct } from \"../../querries/product.querries\";\nimport { toggleUpdateProductModal } from \"../../redux/reducers/app/app.actions\";\nimport { selectProductToEdit } from \"../../redux/reducers/product/product.actions\";\nimport {\n  selectUserToken,\n  selectUserTokenDecoded,\n} from \"../../redux/reducers/user/user.selectors\";\nimport CustomButton from \"../CustoButton/CustomButton\";\nimport { AdminBarContainer } from \"./admin-bar.style\";\n\nconst AdminBar = ({ ...product }) => {\n  const dispatch = useDispatch();\n  const user = useSelector(selectUserTokenDecoded);\n  const userToken = useSelector(selectUserToken);\n\n  const handleDeleteProduct = async () => {\n    const validToken = await verifyToken(userToken, dispatch);\n    if (validToken) {\n      deleteProduct(validToken, product._id, dispatch);\n    }\n  };\n\n  const handleHideProduct = async () => {\n    const validToken = await verifyToken(userToken, dispatch);\n    if (validToken) {\n      hideProduct(validToken, product, dispatch);\n    }\n  };\n  return (\n    user?.user.role === \"admin\" && (\n      <AdminBarContainer>\n        <CustomButton\n          positive\n          isSmall\n          style={{ background: \"purple\" }}\n          onClick={() => {\n            dispatch(selectProductToEdit(product));\n            dispatch(toggleUpdateProductModal());\n          }}\n        >\n          <FontAwesomeIcon icon={faEdit} size=\"1x\" />\n        </CustomButton>\n        <CustomButton\n          positive\n          isSmall\n          style={{ background: \"grey\" }}\n          onClick={() => handleHideProduct()}\n        >\n          <FontAwesomeIcon\n            icon={product.hidden ? faEye : faEyeSlash}\n            size=\"1x\"\n          />\n        </CustomButton>\n        <CustomButton\n          positive\n          isSmall\n          style={{ background: \"red\" }}\n          onClick={() => handleDeleteProduct()}\n        >\n          <FontAwesomeIcon icon={faTrash} size=\"1x\" />\n        </CustomButton>\n      </AdminBarContainer>\n    )\n  );\n};\n\nexport default AdminBar;\n","import styled, { css } from \"styled-components\";\nimport { colors } from \"../../_consts/colors/colors\";\n\nconst isCart = (props) => {\n  if (props.isCart) {\n    return css`\n      flex-direction: row;\n      div > img {\n        width: 80px;\n        height: 80px;\n        margin-right: 8px;\n      }\n    `;\n  }\n};\nexport const ProductItemContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: ${(props) =>\n    props.isCart ? \"flex-start\" : \"space-between\"};\n  align-items: center;\n  width: 100%;\n  padding: 12px;\n`;\n\nexport const ProductItemTop = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  min-height: 100%;\n  div > img {\n    width: 300px;\n    height: 300px;\n  }\n  ${isCart}\n`;\n\nexport const ProductItemTitleAndPrice = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: ${(props) =>\n    props.isCart ? \"space-between\" : \"flex-start\"};\n  flex-grow: 1;\n  h3 {\n    margin: 0;\n    margin-bottom: 22px;\n    font-size: 1em;\n    text-transform: uppercase;\n    text-align: left;\n    align-self: flex-start;\n  }\n  span {\n    font-size: 1em;\n    font-weight: bold;\n    display: inline-block;\n    margin-left: 12px;\n    align-self: flex-start;\n  }\n`;\n\nexport const ProductItemDescription = styled.div`\n  width: fit-content;\n  margin-left: auto;\n  font-size: 1.3em;\n  margin: 12px 0;\n  height: auto;\n  border: 3px solid ${colors.gold};\n  background: ${colors.green};\n  color: white;\n  font-weight: 700;\n  line-height: 1.5;\n  padding: 0.5em;\n  border-radius: 12px;\n`;\n\nexport const ProductItemButtonContainer = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: space-around;\n`;\n\nexport const ProductImageContainer = styled.div`\n  width: fit-content;\n  height: fit-content;\n  img {\n    border-radius: 30px 30px 30px 30px;\n  }\n`;\n","import { faEye } from \"@fortawesome/pro-duotone-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { memo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addToCart } from \"../../redux/reducers/cart/cart.actions\";\nimport { selectCartItems } from \"../../redux/reducers/cart/cart.selectors\";\nimport { getSpecificItemCount } from \"../../redux/reducers/cart/cart.utils\";\nimport { selectProduct } from \"../../redux/reducers/product/product.actions\";\nimport { localServerURI } from \"../../_consts/server/server\";\nimport Badge from \"../Badge/Badge\";\nimport CustomButton from \"../CustoButton/CustomButton\";\nimport {\n  ProductImageContainer,\n  ProductItemButtonContainer,\n  ProductItemContainer,\n  ProductItemTitleAndPrice,\n  ProductItemTop,\n} from \"./product-item.style\";\n\nconst ProductItem = ({ children, isCart, ...product }) => {\n  console.log(\"mounted\");\n  const dispatch = useDispatch();\n  const cart = useSelector(selectCartItems);\n  return (\n    <ProductItemContainer isCart={isCart}>\n      <ProductItemTop isCart={isCart}>\n        <ProductImageContainer style={{ position: \"relative\" }}>\n          {!isCart && (\n            <>\n              <Badge right>{getSpecificItemCount(product._id, cart)}</Badge>\n              <Badge\n                left\n                style={{ background: \"rgba(255,255,255, 0.2)\" }}\n                onClick={() => dispatch(selectProduct(product))}\n              >\n                <FontAwesomeIcon icon={faEye} color=\"white\" size=\"2x\" />\n              </Badge>\n            </>\n          )}\n          <img\n            src={`${localServerURI}/uploads/${product.imgURI}`}\n            alt={product?.name}\n            loading=\"lazy\"\n          />\n          {!isCart && (\n            <CustomButton\n              style={{\n                position: \"absolute\",\n                bottom: \"8px\",\n                right: \"0\",\n                width: \"100%\",\n              }}\n              positive\n              type=\"button\"\n              onClick={() => dispatch(addToCart(product))}\n            >\n              Ajouter au Panier\n            </CustomButton>\n          )}\n        </ProductImageContainer>\n        <ProductItemTitleAndPrice isCart={isCart}>\n          <h3>\n            {product.hidden ? `CACHE : ${product?.name}` : `${product.name}`}\n          </h3>\n          <span>\n            {product?.price?.toFixed(2)}\n            <small>€</small>\n          </span>\n        </ProductItemTitleAndPrice>\n      </ProductItemTop>\n      <ProductItemButtonContainer>{children}</ProductItemButtonContainer>\n    </ProductItemContainer>\n  );\n};\n\nexport default memo(ProductItem);\n","import React from \"react\";\nimport ProductItem from \"../../components/ProductItem/ProductItem\";\nimport { categories } from \"../../data/categories\";\nimport CategoryTitle from \"../../components/CategoryTitle/CategoryTitle\";\nimport { useSelector } from \"react-redux\";\nimport { selectProducts } from \"../../redux/reducers/product/product.selectors\";\nimport AdminBar from \"../../components/AdminBar/AdminBar\";\nimport { ProductsContainer } from \"./home.style\";\nimport { selectUserTokenDecoded } from \"../../redux/reducers/user/user.selectors\";\nimport { Link } from \"react-router-dom\";\n\nconst HomePage = () => {\n  const products = useSelector(selectProducts);\n  const user = useSelector(selectUserTokenDecoded);\n  return (\n    <main>\n      {categories.map((category) => (\n        <div key={category.slug}>\n          <Link\n            style={{ textDecoration: \"none\" }}\n            to={`produits/${category.slug}`}\n          >\n            <CategoryTitle>{category.name}</CategoryTitle>\n          </Link>\n          <ProductsContainer horizontal>\n            {products.map(\n              (product) =>\n                product.category === category.slug && (\n                  <div key={product._id}>\n                    <AdminBar {...product} />\n                    {/* si le produit n'est pas caché ou que \n                    l'utilisateur est admin montrer le produit \n                    sinon on ne le montre pas */}\n                    {(!product.hidden ||\n                      (user && user.user.role === \"admin\")) && (\n                      <ProductItem {...product}>\n                        {/* <CustomButton\n                          type=\"button\"\n                          onClick={() => dispatch(selectProduct(product))}\n                        >\n                          Voir plus\n                        </CustomButton> */}\n                      </ProductItem>\n                    )}\n                  </div>\n                )\n            )}\n          </ProductsContainer>\n        </div>\n      ))}\n    </main>\n  );\n};\n\nexport default HomePage;\n","import styled, { css } from \"styled-components\";\n\nconst horizontalScroll = (props) => {\n  if (props.horizontal) {\n    return css`\n      display: flex;\n      flex-direction: row;\n      flex-wrap: nowrap;\n      align-items: flex-start;\n      justify-content: flex-start;\n      width: 100%;\n      overflow: auto;\n      & > div {\n        display: flex;\n        width: 100%;\n        flex-direction: column;\n        & img {\n          width: 200px;\n          height: 200px;\n        }\n      }\n      @media (min-width: 600px) {\n        box-sizing: content-box;\n        flex-direction: row;\n        flex-wrap: wrap;\n        align-items: flex-start;\n        justify-content: center;\n        width: 100%;\n        & > div {\n          margin: 12px 12px;\n          display: flex;\n          width: 30%;\n          height: auto;\n          flex-direction: column;\n          align-items: center;\n          justify-content: flex-start;\n          & img {\n            width: 200px;\n            height: 200px;\n          }\n        }\n      }\n    `;\n  }\n};\n\nconst verticalScroll = (props) => {\n  if (props.vertical) {\n    return css`\n      display: flex;\n      flex-direction: column;\n      flex-wrap: nowrap;\n      align-items: center;\n      @media (min-width: 600px) {\n        box-sizing: content-box;\n        flex-direction: row;\n        flex-wrap: wrap;\n        align-items: flex-start;\n        justify-content: center;\n        width: 100%;\n        & > div {\n          margin: 12px 12px;\n          display: flex;\n          width: 30%;\n          height: auto;\n          flex-direction: column;\n          align-items: center;\n          justify-content: flex-start;\n          & img {\n            width: 200px;\n            height: 200px;\n          }\n        }\n      }\n    `;\n  }\n};\nexport const ProductsContainer = styled.div`\n  ${verticalScroll}\n  ${horizontalScroll}\n`;\n"],"names":["AdminBarContainer","styled","product","dispatch","useDispatch","user","useSelector","selectUserTokenDecoded","userToken","selectUserToken","handleDeleteProduct","verifyToken","validToken","deleteProduct","_id","handleHideProduct","hideProduct","role","CustomButton","positive","isSmall","style","background","onClick","selectProductToEdit","toggleUpdateProductModal","icon","faEdit","size","hidden","faEye","faEyeSlash","faTrash","ProductItemContainer","props","isCart","ProductItemTop","css","ProductItemTitleAndPrice","ProductItemButtonContainer","colors","ProductImageContainer","ProductItem","children","console","log","cart","selectCartItems","position","Badge","right","getSpecificItemCount","left","selectProduct","color","src","localServerURI","imgURI","alt","name","loading","bottom","width","type","addToCart","price","toFixed","memo","products","selectProducts","categories","category","textDecoration","to","slug","horizontal","map","ProductsContainer","vertical"],"sourceRoot":""}