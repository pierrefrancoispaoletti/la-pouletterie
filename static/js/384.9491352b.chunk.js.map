{"version":3,"file":"static/js/384.9491352b.chunk.js","mappings":"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","sources":["pages/AdminReports/AdminReports.js","CustomHooks/useFetchRawOrders.js","redux/reducers/order/order.actions.js","querries/order.querries.js","redux/reducers/order/order.selectors.js"],"sourcesContent":["import React, { useCallback, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useFetchAllRawOrders } from \"../../CustomHooks/useFetchRawOrders\";\nimport { selectAllRawOrders } from \"../../redux/reducers/order/order.selectors\";\n\nconst AdminReports = () => {\n  useFetchAllRawOrders();\n  const rawOrders = useSelector(selectAllRawOrders);\n  const [args, setArgs] = useState({\n    deliveryMode: \"\",\n    status: \"\",\n    date: \"\",\n    user: \"\",\n  });\n\n  const generateArrayOfYear = useCallback(() => {\n    let min = new Date().getFullYear();\n    let max = min + 10;\n    let years = [];\n    years.push(min - 1);\n    for (let index = min; index <= max; index++) {\n      years.push(index);\n    }\n    return years;\n  }, []);\n\n  const generateArrayofMonth = useCallback(() => {\n    return Array.from({ length: 12 }, (item, index) => {\n      return `${new Date(0, index).toLocaleDateString(\"fr-FR\", {\n        month: \"long\",\n      })} ${new Date().getFullYear()}`;\n    });\n  }, []);\n\n  const filteringFunction = useCallback(\n    () =>\n      rawOrders.filter((obj) => {\n        for (const key in args) {\n          if (key !== \"user\") {\n            if (obj[key] === undefined || !obj[key]?.includes(args[key])) {\n              return false;\n            }\n          } else {\n            const username = `${obj[key][\"lastname\"]} ${obj[key][\"firstname\"]}`;\n            if (username === undefined || !username.includes(args[key])) {\n              return false;\n            }\n          }\n        }\n        return obj;\n      }),\n    [args, rawOrders]\n  );\n\n  const computeAmountOfOrder = useCallback(({ products, status }) => {\n    let computedAmount = products\n      .reduce(\n        (acc, amt) =>\n          status !== \"REMBOURSEE\"\n            ? acc + amt.price * amt.quantity\n            : acc - amt.price * amt.quantity,\n        0\n      )\n      .toFixed(2);\n    return computedAmount;\n  }, []);\n\n  const computeTotalAmount = useCallback(() => {\n    const totalAmount = filteringFunction()\n      .flatMap((order) => order.products)\n      .reduce((acc, amt) => acc + amt.price * amt.quantity, 0);\n\n    const totalRefundedAmount = filteringFunction()\n      .flatMap((order) =>\n        order.status === \"REMBOURSEE\" ? order.products : undefined\n      )\n      .filter((i) => i !== undefined)\n      .reduce((acc, amt) => acc - amt.price * amt.quantity, 0);\n    return (totalAmount + totalRefundedAmount).toFixed(2);\n  }, [filteringFunction]);\n\n  const selectGenerator = useCallback(\n    (primaryKey = \"\", secondaryKey = \"\", thirdKey = \"\") => {\n      if (primaryKey && secondaryKey && thirdKey) {\n        return Array.from(\n          new Set(\n            rawOrders\n              .map(\n                (order) =>\n                  `${order[primaryKey][secondaryKey]} ${order[primaryKey][thirdKey]}`\n              )\n              .filter((i) => i !== undefined)\n          )\n        );\n      }\n      return Array.from(\n        new Set(\n          rawOrders\n            .map((order) => order[primaryKey])\n            .filter((i) => i !== undefined)\n        )\n      );\n    },\n    [rawOrders]\n  );\n\n  const users = selectGenerator(\"user\", \"lastname\", \"firstname\");\n\n  const dvModes = selectGenerator(\"deliveryMode\");\n\n  const status = selectGenerator(\"status\");\n\n  const handleChange = useCallback(\n    (e) => {\n      const { name, value } = e.target;\n\n      setArgs({ ...args, [name]: value });\n    },\n    [args]\n  );\n\n  return (\n    <div>\n      <h1>Total des commandes : {rawOrders.length}</h1>\n      <h1>Total des produits filtrés : {filteringFunction().length}</h1>\n      <h2>\n        Total général :{computeTotalAmount()}\n        <small>€</small>\n      </h2>\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"space-around\",\n          padding: \"12px\",\n        }}\n      >\n        <select name=\"user\" onChange={handleChange}>\n          <option value=\"\">Selectionnez un utilisateur</option>\n          {users &&\n            users.map((user) => (\n              <option key={user} value={user}>\n                {user}\n              </option>\n            ))}\n        </select>\n        <select name=\"deliveryMode\" onChange={handleChange}>\n          <option value=\"\">Selectionnez un mode de livraison</option>\n          {dvModes &&\n            dvModes.map((mode) => (\n              <option key={mode} value={mode}>\n                {mode}\n              </option>\n            ))}\n        </select>\n        <select name=\"status\" onChange={handleChange}>\n          <option value=\"\">Selectionnez status de commande</option>\n          {status &&\n            status.map((sta) => (\n              <option key={sta} value={sta}>\n                {sta}\n              </option>\n            ))}\n        </select>\n        <select name=\"date\" onChange={handleChange}>\n          <option value=\"\">Selectionnez un mois de l'année</option>\n          {generateArrayofMonth().map((month) => (\n            <option key={month} value={month}>\n              {month.toUpperCase()}\n            </option>\n          ))}\n        </select>\n        <select name=\"date\" onChange={handleChange}>\n          <option value=\"\">Selectionnez l'année</option>\n          {generateArrayOfYear().map((year) => (\n            <option key={year} value={year}>\n              {year}\n            </option>\n          ))}\n        </select>\n      </div>\n      <div>\n        <table style={{ textAlign: \"center\", width: \"100%\" }}>\n          <thead>\n            <tr>\n              <th>utilisateur</th>\n              <th>date</th>\n              <th>mode</th>\n              <th>status</th>\n              <th>montant commande</th>\n              <th>produits commandés</th>\n            </tr>\n          </thead>\n          <tbody>\n            {filteringFunction().map((order) => (\n              <tr key={order._id}>\n                <td>\n                  {order.user.lastname} {order.user.firstname}\n                </td>\n                <td>{order.date}</td>\n                <td>{order.deliveryMode}</td>\n                <td>{order.status}</td>\n                <td>\n                  {order && computeAmountOfOrder(order)}\n                  <small>€</small>\n                </td>\n                <td>\n                  <ul style={{ listStyle: \"none\" }}>\n                    {order.products.map(({ _id, quantity, name }, index) => (\n                      <li key={_id + index} style={{ textAlign: \"center\" }}>\n                        {name} x {quantity}\n                      </li>\n                    ))}\n                  </ul>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminReports;\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchAllRawOrders } from \"../querries/order.querries\";\nimport { selectUserToken } from \"../redux/reducers/user/user.selectors\";\n\nexport const useFetchAllRawOrders = () => {\n  const token = useSelector(selectUserToken);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    fetchAllRawOrders(token, dispatch);\n  }, [token, dispatch]);\n};\n","import { orderActionTypes } from \"./order.types\";\n\nexport const getOrdersByUserId = (orders) => ({\n  type: orderActionTypes.GET_ORDERS_BY_USER_ID,\n  payload: orders,\n});\n\nexport const getAllOrders = (orders) => ({\n  type: orderActionTypes.GET_ALL_ORDERS,\n  payload: orders,\n});\n\nexport const getAllRawOrders = (orders) => ({\n  type: orderActionTypes.GET_ALL_RAW_ORDERS,\n  payload: orders,\n});\n","import axios from \"axios\";\nimport { setMessage, toggleLoading } from \"../redux/reducers/app/app.actions\";\nimport { emptyCart } from \"../redux/reducers/cart/cart.actions\";\nimport {\n  getAllOrders,\n  getAllRawOrders,\n  getOrdersByUserId,\n} from \"../redux/reducers/order/order.actions\";\nimport { localServerURI } from \"../_consts/server/server\";\n\nexport const fetchOrdersByUserId = async (userId, token, dispatch) => {\n  dispatch(toggleLoading());\n  try {\n    const response = await axios({\n      method: \"GET\",\n      url: `${localServerURI}/api/orders/${userId}`,\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    const {\n      data: { orders, message },\n    } = response;\n    dispatch(toggleLoading());\n    dispatch(getOrdersByUserId(orders));\n    dispatch(setMessage({ status: \"success\", message: message }));\n  } catch (error) {\n    dispatch(toggleLoading());\n    dispatch(\n      setMessage({ status: \"error\", message: error.response.data.message })\n    );\n  }\n};\n\nexport const fetchAllOrders = async (token, dispatch) => {\n  try {\n    const response = await axios({\n      method: \"GET\",\n      url: `${localServerURI}/api/orders/all`,\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n\n    const {\n      data: { orders },\n    } = response;\n\n    dispatch(getAllOrders(orders));\n  } catch (error) {\n    dispatch(\n      setMessage({ status: \"error\", message: error.response.data.message })\n    );\n  }\n};\n\nexport const fetchAllRawOrders = async (token, dispatch) => {\n  dispatch(toggleLoading());\n  try {\n    const response = await axios({\n      method: \"GET\",\n      url: `${localServerURI}/api/orders/all-raw`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    const {\n      data: { orders },\n    } = response;\n\n    dispatch(getAllRawOrders(orders));\n    dispatch(toggleLoading());\n  } catch (error) {\n    dispatch(toggleLoading());\n    dispatch(\n      setMessage({ status: \"error\", message: error.response.data.message })\n    );\n  }\n};\n\nexport const createOrder = async (token, order, dispatch, navigate) => {\n  dispatch(toggleLoading());\n  const { products, ...others } = order;\n  let newOrder = {\n    ...others,\n    products: products.map(({ _id, quantity, name, price }) => ({\n      _id,\n      quantity,\n      name,\n      price,\n    })),\n  };\n  try {\n    const response = await axios({\n      method: \"POST\",\n      url: `${localServerURI}/api/orders/add`,\n      data: { order: newOrder },\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    const {\n      data: { message },\n    } = response;\n    dispatch(toggleLoading());\n    dispatch(setMessage({ status: \"success\", message: message }));\n    dispatch(emptyCart());\n    navigate(\"/vos-commandes\");\n  } catch (error) {\n    dispatch(toggleLoading());\n    dispatch(\n      setMessage({ status: \"error\", message: error.response.data.message })\n    );\n  }\n};\n\nexport const updateOrder = async (token, update, dispatch) => {\n  dispatch(toggleLoading());\n  try {\n    const response = await axios({\n      method: \"POST\",\n      url: `${localServerURI}/api/orders/update`,\n      data: { update },\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    const {\n      data: { message },\n    } = response;\n    dispatch(toggleLoading());\n    dispatch(setMessage({ status: \"success\", message: message }));\n  } catch (error) {\n    dispatch(toggleLoading());\n    dispatch(\n      setMessage({ status: \"error\", message: error.response.data.message })\n    );\n  }\n};\n","import { createSelector } from \"reselect\";\n\nconst selectOrder = (state) => state.order;\n\nexport const selectOrdersByUserId = createSelector(\n  [selectOrder],\n  (order) => order.userOrders\n);\n\nexport const selectAllOrders = createSelector(\n  [selectOrder],\n  (order) => order.allOrders\n);\n\nexport const selectAllRawOrders = createSelector(\n  [selectOrder],\n  (order) => order.rawOrders\n);\n"],"names":["token","useSelector","selectUserToken","dispatch","useDispatch","useEffect","fetchAllRawOrders","useFetchAllRawOrders","rawOrders","selectAllRawOrders","useState","deliveryMode","status","date","user","args","setArgs","generateArrayOfYear","useCallback","min","Date","getFullYear","max","years","push","index","generateArrayofMonth","Array","from","length","item","toLocaleDateString","month","filteringFunction","filter","obj","key","undefined","includes","username","computeAmountOfOrder","products","reduce","acc","amt","price","quantity","toFixed","computeTotalAmount","flatMap","order","i","selectGenerator","primaryKey","secondaryKey","thirdKey","Set","map","users","dvModes","handleChange","e","target","name","value","style","width","display","justifyContent","padding","onChange","mode","sta","toUpperCase","year","textAlign","lastname","firstname","listStyle","_id","getOrdersByUserId","orders","type","orderActionTypes","payload","getAllOrders","getAllRawOrders","fetchOrdersByUserId","userId","toggleLoading","axios","method","url","localServerURI","headers","Authorization","response","data","message","setMessage","fetchAllOrders","createOrder","navigate","others","newOrder","emptyCart","updateOrder","update","selectOrder","state","selectOrdersByUserId","createSelector","userOrders","selectAllOrders","allOrders"],"sourceRoot":""}